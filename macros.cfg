#####################################################################
#	Macros
#####################################################################

## Start/end

[gcode_macro PRINT_START] # params: EXTRUDER, BED
gcode:
    # Set temperatures
    {% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(210)|float %}
    
    M140 S{BED_TEMP}
    # M104 S{EXTRUDER_TEMP}     ; only set bed temp, give time for heat to sink
    
    CG28                        ; Home all axes
    G90                         ; set absolute mode
    SHOW_PRINTHEAD              ; Bring printhead forward for last-minute cleaning

    # Wait for temperatures
    M190 S{BED_TEMP}            ; Set and wait for bed temp
    M109 S{EXTRUDER_TEMP}       ; Set and wait for extruder temp

    CG29                        ; Measure bed mesh

    DRAW_PURGE_LINE
    G92 E0.0

[gcode_macro DRAW_PURGE_LINE] # TODO make it longer
gcode:
    SAVE_GCODE_STATE NAME=purge
    G90                         ; set absolute mode

    G1 Z2.0 F3000               ; move Z=2 to prevent scratching

    G1 X5 Y1 F12000             ; Move to initial position
    G1 Z0.28 F500               ; lower to start of intro line
    M83                         ; set extruder to relative

    G1 X100 E10.0 F2500.0         ; to the right, to the right
    G1 Y1.3 F6000               ; move .3mm forward
    G1 X5 E12.0 F2000.0          ; to the left, to the left

    G1 Z2.0 F3000               ; move Z=2 again to prevent scratching

    RESTORE_GCODE_STATE NAME=purge

[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract a tiny bit of filament

    PARK
    TURN_OFF_HEATERS
    TURN_OFF_FANS


## Saved Posiitons

[gcode_macro SHOW_PRINTHEAD] # Move printhead to an accessible spot for maintenance
gcode:
    {% set x_mid = printer.toolhead.axis_maximum.x|float / 2.0 %}  ; set park positon for x
    
    CG28                            ; home all axes
    
    SAVE_GCODE_STATE NAME=printhead

    G91                             ; set relative mode
    G1 Z10 F600                     ; Raise bed a little

    G90                             ; set absolute mode

    G1 X{x_mid} Y5 F6000            ; center printhead close to front
    G1 Z60 F600                     ; raise Z more

    RESTORE_GCODE_STATE NAME=printhead

[gcode_macro CENTER]
gcode:
    {% set x_mid = printer.toolhead.axis_maximum.x|float / 2.0 %}  ; set park positon for x
    {% set y_mid = printer.toolhead.axis_maximum.y|float / 2.0 %}  ; set park positon for x
    
    CG28                             ; home all axes

    SAVE_GCODE_STATE NAME=center
    G90                              ; set absolute mode

    G1 X{x_mid} Y{y_mid} Z30 F6000   ; move to center

    RESTORE_GCODE_STATE NAME=center


## Pause/Resume

[pause_resume] ; Enable pause/resume

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    TURN_OFF_SMART_FILTER
    CLEAR_PAUSE
    M220 S100 ;Reset Speed factor override percentage to default (100%)
    M221 S100 ;Reset Extrude factor override percentage to default (100%)
    PARK
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
variable_extrude: 0.2   ; change this if you need more or less extrusion
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}        ; read E from pause macro
    SAVE_GCODE_STATE NAME=PAUSE_state 

    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G90
    PARK

[gcode_macro PARK]
gcode:
    {% set x_park = 10.0 %}  ; set park positon for x
    {% set y_park = printer.toolhead.axis_maximum.y|float - 10.0 %}  ; set park positon for y
    
    {% set max_z = printer.toolhead.axis_maximum.z|float %}         ; calculate save park position for z
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = 2.0 %}
    {% if (act_z + lift_z) > max_z %}
        {% set z_safe = max_z %}
    {% else %}
        {% set z_safe = act_z + lift_z %}
    {% endif %}

    G1 Z{z_safe} F900                   ; lift by safe margin
    G1 X{x_park} Y{y_park} F6000        ; move to corner
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}         ; read E from pause macro
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

## Load/unload

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load
    M83                            ; set extruder to relative
    G1 E40 F300                    ; load
    G1 E15 F150                    ; prime nozzle with filament
    RESTORE_GCODE_STATE NAME=load
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unload
    M83                            ; set extruder to relative
    G1 E10 F300                    ; extrude a little to soften tip
    G1 E-50 F1800                  ; retract some, but not too much or it will jam
    RESTORE_GCODE_STATE NAME=unload


## Remappings

[gcode_macro M601] # Remapping for PrusaSlicer/SuperSlicer
gcode:
    PAUSE

[gcode_macro TURN_OFF_MOTORS]
gcode:
    M84

[gcode_macro TURN_OFF_FANS]
gcode:
    M106 S0

 # Conditional G28 (Home all axes)
[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

# TODO implement
# Conditional G29 (Measure bed mesh)
[gcode_macro CG29]
gcode:
    G29

## LED Lights
# TODO Make sure comand is right

[gcode_macro TURN_ON_LEDS]
gcode:
    {% set R = params.RED|default(1.0)|float %}
    {% set G = params.GREEN|default(1.0)|float %}
    {% set B = params.BLUE|default(1.0)|float %}
    SET_LED LED=top_leds RED={R} GREEN={G} BLUE={B}

[gcode_macro TURN_OFF_LEDS]
gcode:
    SET_LED LED=top_leds RED={0.0} GREEN={0.0} BLUE={0.0}

