
######################################################################
#      Display - 128x64 Endere 3 stock display
######################################################################

# This section is used for a Creality "12864" display with a single
# ribbon cable between the display's EXP3 plug and the
# micro-controller board's EXP1 connector.

[display]
lcd_type: st7920
cs_pin: PB8
sclk_pin: PB9
sid_pin: PB15
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

# Display Beeper
[output_pin beeper]
pin: PB5

[board_pins]
aliases:
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>


######################################################################
# Custom Menus
######################################################################


######################################################################
# Pause/Resume commands
######################################################################

[menu __main __octoprint]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Print


### PRINT ### 
[menu __main __octoprint __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
    PAUSE

[menu __main __octoprint __m600]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause and swap filament
gcode:
    PAUSE

[menu __main __octoprint __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
    RESUME

[menu __main __octoprint __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
    CANCEL_PRINT


######################################################################
# LEDSs
######################################################################

[menu __main __leds]
type: list
name: LEDs

[menu __main __leds __ledsonoff]
type: input
enable: {"neopixel lights" in printer}
name: LEDs: {'ON ' if menu.input else 'OFF'}
input: {printer['neopixel lights'].value > 0.0}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_LED LED=lights RED={1 if menu.input else 0} GREEN={1 if menu.input else 0} BLUE={1 if menu.input else 0}

[menu __main __leds __ledscontrol]
type: input
enable: {"neopixel lights" in printer}
name: LEDs: {'%3d' % (menu.input*100)}%
input: {printer['neopixel lights'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.02
gcode:
    SET_LED LED=lights RED={menu.input} GREEN={menu.input} BLUE={menu.input}
